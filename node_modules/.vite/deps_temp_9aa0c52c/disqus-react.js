import {
  require_prop_types
} from "./chunk-OAYXKSEV.js";
import {
  require_react
} from "./chunk-6BZ7SOBX.js";
import {
  __commonJS
} from "./chunk-LEFUMAU3.js";

// node_modules/disqus-react/lib/utils.js
var require_utils = __commonJS({
  "node_modules/disqus-react/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.insertScript = insertScript;
    exports.removeScript = removeScript;
    exports.removeResources = removeResources;
    exports.debounce = debounce;
    exports.isReactElement = isReactElement;
    exports.shallowComparison = shallowComparison;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _createForOfIteratorHelper(o) {
      if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var it, normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = o[Symbol.iterator]();
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it["return"] != null)
            it["return"]();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function insertScript(src, id, parentElement) {
      var script = window.document.createElement("script");
      script.async = true;
      script.src = src;
      script.id = id;
      parentElement.appendChild(script);
      return script;
    }
    function removeScript(id, parentElement) {
      var script = window.document.getElementById(id);
      if (script)
        parentElement.removeChild(script);
    }
    function removeResources() {
      var disqusResources = window.document.querySelectorAll(
        // eslint-disable-next-line max-len
        'link[href*="disquscdn.com/next/embed"], link[href*="disquscdn.com/next/recommendations"], link[href*="disqus.com/next/config.js"], script[src*="disquscdn.com/next/embed"], script[src*="disqus.com/count-data.js"], iframe[title="Disqus"]'
      );
      disqusResources.forEach(function(el) {
        return el.remove();
      });
    }
    function debounce(func, wait, runOnFirstCall) {
      var timeout;
      return function() {
        var context = this;
        var args = arguments;
        var deferredExecution = function deferredExecution2() {
          timeout = null;
          if (!runOnFirstCall)
            func.apply(context, args);
        };
        var callNow = runOnFirstCall && !timeout;
        window.clearTimeout(timeout);
        timeout = setTimeout(deferredExecution, wait);
        if (callNow)
          func.apply(context, args);
      };
    }
    function isReactElement(element) {
      if (_react["default"].isValidElement(element)) {
        return true;
      } else if (Array.isArray(element)) {
        return element.some(function(value) {
          return _react["default"].isValidElement(value);
        });
      }
      return false;
    }
    function shallowComparison(currentProps, nextProps) {
      var propNames = new Set(Object.keys(currentProps), Object.keys(nextProps));
      var _iterator = _createForOfIteratorHelper(propNames), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var name = _step.value;
          if (_typeof(currentProps[name]) === "object") {
            if (shallowComparison(currentProps[name], nextProps[name]))
              return true;
          } else if (currentProps[name] !== nextProps[name] && !isReactElement(currentProps[name])) {
            return true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
  }
});

// node_modules/disqus-react/lib/constants.js
var require_constants = __commonJS({
  "node_modules/disqus-react/lib/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CALLBACKS = exports.RECOMMENDATIONS_SCRIPT_ID = exports.RECOMMENDATIONS_ID = exports.COMMENT_EMBED_HEIGHT = exports.COMMENT_EMBED_WIDTH = exports.COMMENT_COUNT_SCRIPT_ID = exports.COMMENT_COUNT_CLASS = exports.EMBED_SCRIPT_ID = exports.THREAD_ID = void 0;
    var THREAD_ID = "disqus_thread";
    exports.THREAD_ID = THREAD_ID;
    var EMBED_SCRIPT_ID = "dsq-embed-scr";
    exports.EMBED_SCRIPT_ID = EMBED_SCRIPT_ID;
    var COMMENT_COUNT_CLASS = "disqus-comment-count";
    exports.COMMENT_COUNT_CLASS = COMMENT_COUNT_CLASS;
    var COMMENT_COUNT_SCRIPT_ID = "dsq-count-scr";
    exports.COMMENT_COUNT_SCRIPT_ID = COMMENT_COUNT_SCRIPT_ID;
    var COMMENT_EMBED_WIDTH = 420;
    exports.COMMENT_EMBED_WIDTH = COMMENT_EMBED_WIDTH;
    var COMMENT_EMBED_HEIGHT = 320;
    exports.COMMENT_EMBED_HEIGHT = COMMENT_EMBED_HEIGHT;
    var RECOMMENDATIONS_ID = "disqus_recommendations";
    exports.RECOMMENDATIONS_ID = RECOMMENDATIONS_ID;
    var RECOMMENDATIONS_SCRIPT_ID = "dsq-recs-scr";
    exports.RECOMMENDATIONS_SCRIPT_ID = RECOMMENDATIONS_SCRIPT_ID;
    var CALLBACKS = ["preData", "preInit", "onInit", "onReady", "afterRender", "preReset", "onIdentify", "beforeComment", "onNewComment", "onPaginate"];
    exports.CALLBACKS = CALLBACKS;
  }
});

// node_modules/disqus-react/lib/CommentCount.js
var require_CommentCount = __commonJS({
  "node_modules/disqus-react/lib/CommentCount.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CommentCount = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _utils = require_utils();
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    var queueResetCount = (0, _utils.debounce)(function() {
      if (window.DISQUSWIDGETS)
        window.DISQUSWIDGETS.getCount({
          reset: true
        });
    }, 300, false);
    var CommentCount = function(_React$Component) {
      _inherits(CommentCount2, _React$Component);
      var _super = _createSuper(CommentCount2);
      function CommentCount2() {
        _classCallCheck(this, CommentCount2);
        return _super.apply(this, arguments);
      }
      _createClass(CommentCount2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.loadInstance();
        }
      }, {
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          if (this.props === nextProps)
            return false;
          return (0, _utils.shallowComparison)(this.props, nextProps);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (this.props.shortname !== prevProps.shortname)
            this.cleanInstance();
          this.loadInstance();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.cleanInstance();
        }
      }, {
        key: "loadInstance",
        value: function loadInstance() {
          var doc = window.document;
          if (doc.getElementById(_constants.COMMENT_COUNT_SCRIPT_ID))
            queueResetCount();
          else
            (0, _utils.insertScript)("https://".concat(this.props.shortname, ".disqus.com/count.js"), _constants.COMMENT_COUNT_SCRIPT_ID, doc.body);
        }
      }, {
        key: "cleanInstance",
        value: function cleanInstance() {
          var doc = window.document;
          (0, _utils.removeScript)(_constants.COMMENT_COUNT_SCRIPT_ID, doc.body);
          window.DISQUSWIDGETS = void 0;
          (0, _utils.removeResources)();
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, shortname = _this$props.shortname, config = _this$props.config, children = _this$props.children, className = _this$props.className, rest = _objectWithoutProperties(_this$props, ["shortname", "config", "children", "className"]);
          var additionalClass = className ? " ".concat(className) : "";
          return _react["default"].createElement("span", _extends({}, rest, {
            className: "".concat(_constants.COMMENT_COUNT_CLASS).concat(additionalClass),
            "data-disqus-identifier": config.identifier,
            "data-disqus-url": config.url
          }), children);
        }
      }]);
      return CommentCount2;
    }(_react["default"].Component);
    exports.CommentCount = CommentCount;
    CommentCount.propTypes = {
      shortname: _propTypes["default"].string.isRequired,
      config: _propTypes["default"].shape({
        identifier: _propTypes["default"].string,
        url: _propTypes["default"].string,
        title: _propTypes["default"].string
      }).isRequired,
      className: _propTypes["default"].string,
      children: _propTypes["default"].node
    };
  }
});

// node_modules/disqus-react/lib/CommentEmbed.js
var require_CommentEmbed = __commonJS({
  "node_modules/disqus-react/lib/CommentEmbed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CommentEmbed = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    var CommentEmbed = function(_React$Component) {
      _inherits(CommentEmbed2, _React$Component);
      var _super = _createSuper(CommentEmbed2);
      function CommentEmbed2() {
        _classCallCheck(this, CommentEmbed2);
        return _super.apply(this, arguments);
      }
      _createClass(CommentEmbed2, [{
        key: "getSrc",
        value: function getSrc() {
          var radixBase = 36;
          var post = Number(this.props.commentId).toString(radixBase);
          var parentParam = this.props.showParentComment ? "1" : "0";
          var mediaParam = this.props.showMedia ? "1" : "0";
          return "https://embed.disqus.com/p/".concat(post, "?p=").concat(parentParam, "&m=").concat(mediaParam);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, width = _this$props.width, height = _this$props.height, commentId = _this$props.commentId, showMedia = _this$props.showMedia, showParentComment = _this$props.showParentComment, rest = _objectWithoutProperties(_this$props, ["width", "height", "commentId", "showMedia", "showParentComment"]);
          return _react["default"].createElement("iframe", _extends({}, rest, {
            src: this.getSrc(),
            width,
            height,
            seamless: "seamless",
            scrolling: "no",
            frameBorder: "0"
          }));
        }
      }]);
      return CommentEmbed2;
    }(_react["default"].Component);
    exports.CommentEmbed = CommentEmbed;
    CommentEmbed.defaultProps = {
      showMedia: true,
      showParentComment: true,
      width: _constants.COMMENT_EMBED_WIDTH,
      height: _constants.COMMENT_EMBED_HEIGHT
    };
    CommentEmbed.propTypes = {
      commentId: _propTypes["default"].string.isRequired,
      showMedia: _propTypes["default"].bool,
      showParentComment: _propTypes["default"].bool,
      width: _propTypes["default"].number,
      height: _propTypes["default"].number,
      className: _propTypes["default"].string
    };
  }
});

// node_modules/disqus-react/lib/DiscussionEmbed.js
var require_DiscussionEmbed = __commonJS({
  "node_modules/disqus-react/lib/DiscussionEmbed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DiscussionEmbed = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _utils = require_utils();
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    var DiscussionEmbed = function(_React$Component) {
      _inherits(DiscussionEmbed2, _React$Component);
      var _super = _createSuper(DiscussionEmbed2);
      function DiscussionEmbed2() {
        _classCallCheck(this, DiscussionEmbed2);
        return _super.apply(this, arguments);
      }
      _createClass(DiscussionEmbed2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (typeof window !== "undefined" && window.disqus_shortname && window.disqus_shortname !== this.props.shortname)
            this.cleanInstance();
          this.loadInstance();
        }
      }, {
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          if (this.props === nextProps)
            return false;
          return (0, _utils.shallowComparison)(this.props, nextProps);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(nextProps) {
          if (this.props.shortname !== nextProps.shortname)
            this.cleanInstance();
          this.loadInstance();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.cleanInstance();
        }
      }, {
        key: "loadInstance",
        value: function loadInstance() {
          var doc = window.document;
          if (window && window.DISQUS && doc.getElementById(_constants.EMBED_SCRIPT_ID)) {
            window.DISQUS.reset({
              reload: true,
              config: this.getDisqusConfig(this.props.config)
            });
          } else {
            window.disqus_config = this.getDisqusConfig(this.props.config);
            window.disqus_shortname = this.props.shortname;
            (0, _utils.insertScript)("https://".concat(this.props.shortname, ".disqus.com/embed.js"), _constants.EMBED_SCRIPT_ID, doc.body);
          }
        }
      }, {
        key: "cleanInstance",
        value: function cleanInstance() {
          var doc = window.document;
          (0, _utils.removeScript)(_constants.EMBED_SCRIPT_ID, doc.body);
          if (window && window.DISQUS)
            window.DISQUS.reset({});
          try {
            delete window.DISQUS;
          } catch (error) {
            window.DISQUS = void 0;
          }
          var disqusThread = doc.getElementById(_constants.THREAD_ID);
          if (disqusThread) {
            while (disqusThread.hasChildNodes()) {
              disqusThread.removeChild(disqusThread.firstChild);
            }
          }
          (0, _utils.removeResources)();
        }
      }, {
        key: "getDisqusConfig",
        value: function getDisqusConfig(config) {
          return function() {
            var _this = this;
            this.page.identifier = config.identifier;
            this.page.url = config.url;
            this.page.title = config.title;
            this.page.category_id = config.categoryID;
            this.page.remote_auth_s3 = config.remoteAuthS3;
            this.page.api_key = config.apiKey;
            if (config.sso)
              this.sso = config.sso;
            if (config.language)
              this.language = config.language;
            _constants.CALLBACKS.forEach(function(callbackName) {
              _this.callbacks[callbackName] = [config[callbackName]];
            });
          };
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, shortname = _this$props.shortname, config = _this$props.config, rest = _objectWithoutProperties(_this$props, ["shortname", "config"]);
          return _react["default"].createElement("div", _extends({}, rest, {
            id: _constants.THREAD_ID
          }));
        }
      }]);
      return DiscussionEmbed2;
    }(_react["default"].Component);
    exports.DiscussionEmbed = DiscussionEmbed;
    DiscussionEmbed.propTypes = {
      shortname: _propTypes["default"].string.isRequired,
      config: _propTypes["default"].shape({
        identifier: _propTypes["default"].string,
        url: _propTypes["default"].string,
        title: _propTypes["default"].string,
        language: _propTypes["default"].string,
        categoryID: _propTypes["default"].string,
        remoteAuthS3: _propTypes["default"].string,
        apiKey: _propTypes["default"].string,
        preData: _propTypes["default"].func,
        preInit: _propTypes["default"].func,
        onInit: _propTypes["default"].func,
        onReady: _propTypes["default"].func,
        afterRender: _propTypes["default"].func,
        preReset: _propTypes["default"].func,
        onIdentify: _propTypes["default"].func,
        beforeComment: _propTypes["default"].func,
        onNewComment: _propTypes["default"].func,
        onPaginate: _propTypes["default"].func,
        sso: _propTypes["default"].shape({
          name: _propTypes["default"].string,
          button: _propTypes["default"].string,
          icon: _propTypes["default"].string,
          url: _propTypes["default"].string,
          logout: _propTypes["default"].string,
          profile_url: _propTypes["default"].string,
          width: _propTypes["default"].string,
          height: _propTypes["default"].string
        })
      }).isRequired
    };
  }
});

// node_modules/disqus-react/lib/Recommendations.js
var require_Recommendations = __commonJS({
  "node_modules/disqus-react/lib/Recommendations.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Recommendations = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _utils = require_utils();
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    var Recommendations = function(_React$Component) {
      _inherits(Recommendations2, _React$Component);
      var _super = _createSuper(Recommendations2);
      function Recommendations2() {
        _classCallCheck(this, Recommendations2);
        return _super.apply(this, arguments);
      }
      _createClass(Recommendations2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.loadInstance();
        }
      }, {
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          if (this.props === nextProps)
            return false;
          return (0, _utils.shallowComparison)(this.props, nextProps);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          this.loadInstance();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.cleanInstance();
        }
      }, {
        key: "getDisqusConfig",
        value: function getDisqusConfig(config) {
          return function() {
            this.page.identifier = config.identifier;
            this.page.url = config.url;
            this.page.title = config.title;
            this.language = config.language;
          };
        }
      }, {
        key: "loadInstance",
        value: function loadInstance() {
          if (typeof window !== "undefined" && window.document) {
            window.disqus_config = this.getDisqusConfig(this.props.config);
            if (window.document.getElementById(_constants.RECOMMENDATIONS_SCRIPT_ID)) {
              this.reloadInstance();
            } else {
              (0, _utils.insertScript)("https://".concat(this.props.shortname, ".disqus.com/recommendations.js"), _constants.RECOMMENDATIONS_SCRIPT_ID, window.document.body);
            }
          }
        }
      }, {
        key: "reloadInstance",
        value: function reloadInstance() {
          if (window && window.DISQUS_RECOMMENDATIONS) {
            window.DISQUS_RECOMMENDATIONS.reset({
              reload: true
            });
          }
        }
      }, {
        key: "cleanInstance",
        value: function cleanInstance() {
          (0, _utils.removeScript)(_constants.RECOMMENDATIONS_SCRIPT_ID, window.document.body);
          try {
            delete window.DISQUS_RECOMMENDATIONS;
          } catch (error) {
            window.DISQUS_RECOMMENDATIONS = void 0;
          }
          var recommendations = window.document.getElementById(_constants.RECOMMENDATIONS_ID);
          if (recommendations) {
            while (recommendations.hasChildNodes()) {
              recommendations.removeChild(recommendations.firstChild);
            }
          }
          (0, _utils.removeResources)();
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, shortname = _this$props.shortname, config = _this$props.config, rest = _objectWithoutProperties(_this$props, ["shortname", "config"]);
          return _react["default"].createElement("div", _extends({}, rest, {
            id: _constants.RECOMMENDATIONS_ID
          }));
        }
      }]);
      return Recommendations2;
    }(_react["default"].Component);
    exports.Recommendations = Recommendations;
    Recommendations.propTypes = {
      shortname: _propTypes["default"].string.isRequired,
      config: _propTypes["default"].shape({
        identifier: _propTypes["default"].string,
        url: _propTypes["default"].string,
        title: _propTypes["default"].string,
        language: _propTypes["default"].string
      })
    };
  }
});

// node_modules/disqus-react/lib/index.js
var require_lib = __commonJS({
  "node_modules/disqus-react/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "CommentCount", {
      enumerable: true,
      get: function get() {
        return _CommentCount.CommentCount;
      }
    });
    Object.defineProperty(exports, "CommentEmbed", {
      enumerable: true,
      get: function get() {
        return _CommentEmbed.CommentEmbed;
      }
    });
    Object.defineProperty(exports, "DiscussionEmbed", {
      enumerable: true,
      get: function get() {
        return _DiscussionEmbed.DiscussionEmbed;
      }
    });
    Object.defineProperty(exports, "Recommendations", {
      enumerable: true,
      get: function get() {
        return _Recommendations.Recommendations;
      }
    });
    exports["default"] = void 0;
    var _CommentCount = require_CommentCount();
    var _CommentEmbed = require_CommentEmbed();
    var _DiscussionEmbed = require_DiscussionEmbed();
    var _Recommendations = require_Recommendations();
    var Disqus = {
      CommentCount: _CommentCount.CommentCount,
      CommentEmbed: _CommentEmbed.CommentEmbed,
      DiscussionEmbed: _DiscussionEmbed.DiscussionEmbed,
      Recommendations: _Recommendations.Recommendations
    };
    var _default = Disqus;
    exports["default"] = _default;
  }
});
export default require_lib();
//# sourceMappingURL=disqus-react.js.map
